tosca_definitions_version: cloudify_dsl_1_3

########################################################

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.4/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.3/plugin.yaml
  - cloudify-diamond-snmp-extension-master/snmp-types.yaml

########################################################

plugins:
    dns-plugin:
        executor: host_agent
        source: dns-plugin

########################################################

relationships:
    dns_client_uses_dns_server:
       derived_from: cloudify.relationships.connected_to
       source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
             preconfigure: dns-plugin.dns_plugin.tasks.configure_resolv_conf


########################################################

node_types:
    policy_node_type:
       derived_from: cloudify.nodes.SoftwareComponent
       properties:
          nodes_to_monitor:
             default: []
       interfaces:
          cloudify.interfaces.lifecycle:
             start:
                implementation: scripts/policy-start.sh
                executor: central_deployment_agent
             stop:
                implementation: scripts/policy-stop.sh
                executor: central_deployment_agent

########################################################

inputs:

    manager_resource_prefix:
      default: ''

    cloudify_agent:
        default:  'ubuntu'

    server_image:
        default: 6c3047c6-17b1-4aaf-a657-9229bb481e50 # Ubuntu 14.04 Server

    server_flavor_name:
        default: 'dc1.1x2.20' # 1 CPU 2 GB RAM

    subnet_cidr:
        default: 172.16.0.0/16

########################################################

node_templates:

    a_node:
        type: cloudify.nodes.Compute
        properties:
           install_agent: false

    policy_node:
        type: policy_node_type
        relationships:
           - target: bono_vm
             type: cloudify.relationships.depends_on
           - target: sprout_vm
             type: cloudify.relationships.depends_on
           - target: a_node
             type: cloudify.relationships.contained_in
        properties:
           nodes_to_monitor:
              - bono_vm
              - sprout_vm

    all_nodes_external:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: All Clearwater Nodes External
            rules:
                - remote_ip_prefix: 0.0.0.0/0
                  port_range_min: 0
                  port_range_max: 8
                  protocol: icmp

    all_nodes_internal:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: All Clearwater Nodes Internal
            rules:
                - remote_ip_prefix: { get_input: subnet_cidr }
                  protocol: null
                  port: null
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ all_nodes_external, security_group, name ] } ] }
                  port_range_min: 161
                  port_range_max: 162
                  protocol: udp
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ all_nodes_external, security_group, name ] } ] }
                  port: 2380
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ all_nodes_external, security_group, name ] } ] }
                  port: 4000
        relationships:
            -    type: cloudify.relationships.depends_on
                 target: all_nodes_external

    ellis_vm_security_group:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: Ellis VM Security Group
            rules:
                - remote_ip_prefix: 0.0.0.0/0
                  port: 80
                - remote_ip_prefix: 0.0.0.0/0
                  port: 443

    bono_vm_security_group:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: Bono VM Security Group
            rules:
                - remote_ip_prefix: 0.0.0.0/0
                  port: 3478
                  protocol: tcp
                - remote_ip_prefix: 0.0.0.0/0
                  port: 3478
                  protocol: udp
                - remote_ip_prefix: 0.0.0.0/0
                  port: 5060
                  protocol: tcp
                - remote_ip_prefix: 0.0.0.0/0
                  port: 5060
                  protocol: udp
                - remote_ip_prefix: 0.0.0.0/0
                  port: 5062
                - remote_ip_prefix: 0.0.0.0/0
                  port_range_min: 32768
                  port_range_max: 65535
                  protocol: udp

    bono_to_others_security_group:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: Bono to Others VM Security Group
            rules:
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ bono_vm_security_group, security_group, name ] } ] }
                  port: 5058
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ sprout_vm_security_group, security_group, name ] } ] }
                  port: 5058
        relationships:
            -    type: cloudify.relationships.depends_on
                 target: bono_vm_security_group
            -    type: cloudify.relationships.depends_on
                 target: sprout_vm_security_group

    sprout_vm_security_group:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: Sprout VM Security Group
            rules:
                - remote_ip_prefix: 0.0.0.0/0
                  port: 443

    sprout_to_others_security_group:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: Sprout to Others VM Security Group
            rules:
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ bono_vm_security_group, security_group, name ] } ] }
                  port: 5052
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ bono_vm_security_group, security_group, name ] } ] }
                  port: 5054
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ sprout_vm_security_group, security_group, name ] } ] }
                  port: 7000
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ sprout_vm_security_group, security_group, name ] } ] }
                  port: 7253
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ sprout_vm_security_group, security_group, name ] } ] }
                  port: 9160
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ sprout_vm_security_group, security_group, name ] } ] }
                  port: 11211
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ homestead_vm_security_group, security_group, name ] } ] }
                  port: 9888
        relationships:
            -    type: cloudify.relationships.depends_on
                 target: bono_vm_security_group
            -    type: cloudify.relationships.depends_on
                 target: sprout_vm_security_group
            -    type: cloudify.relationships.depends_on
                 target: homestead_vm_security_group

    homestead_vm_security_group:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: Homestead VM Security Group

    homestead_to_others_security_group:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: Homestead to Others VM Security Group
            rules:
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ homestead_vm_security_group, security_group, name ] } ] }
                  port: 7000
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ sprout_vm_security_group, security_group, name ] } ] }
                  port: 8888
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ ellis_vm_security_group, security_group, name ] } ] }
                  port: 8888
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ ellis_vm_security_group, security_group, name ] } ] }
                  port: 8889
        relationships:
            -    type: cloudify.relationships.depends_on
                 target: sprout_vm_security_group
            -    type: cloudify.relationships.depends_on
                 target: ellis_vm_security_group
            -    type: cloudify.relationships.depends_on
                 target: homestead_vm_security_group

    homer_vm_security_group:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: Homer VM Security Group

    homer_to_others_security_group:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: Homer to Others VM Security Group
            rules:
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ homer_vm_security_group, security_group, name ] } ] }
                  port: 7000
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ sprout_vm_security_group, security_group, name ] } ] }
                  port: 7888
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ ellis_vm_security_group, security_group, name ] } ] }
                  port: 7888
        relationships:
            -    type: cloudify.relationships.depends_on
                 target: sprout_vm_security_group
            -    type: cloudify.relationships.depends_on
                 target: ellis_vm_security_group
            -    type: cloudify.relationships.depends_on
                 target: homer_vm_security_group

    ralf_vm_security_group:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: Ralf VM Security Group

    ralf_to_others_security_group:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: Ralf to Others VM Security Group
            rules:
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ ralf_vm_security_group, security_group, name ] } ] }
                  port: 7253
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ sprout_vm_security_group, security_group, name ] } ] }
                  port: 10888
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ bono_vm_security_group, security_group, name ] } ] }
                  port: 10888
                - remote_group_name: { concat: [ {get_input: manager_resource_prefix}, { get_property: [ ralf_vm_security_group, security_group, name ] } ] }
                  port: 11211
        relationships:
            -    type: cloudify.relationships.depends_on
                 target: sprout_vm_security_group
            -    type: cloudify.relationships.depends_on
                 target: bono_vm_security_group
            -    type: cloudify.relationships.depends_on
                 target: ralf_vm_security_group

    dns_vm_security_group:
        type: cloudify.openstack.nodes.SecurityGroup
        properties:
            security_group:
                name: DNS VM Security Group

    bono_ip:
        type: cloudify.openstack.nodes.FloatingIP

    ellis_ip:
        type: cloudify.openstack.nodes.FloatingIP

    ellis_vm:
        type: cloudify.openstack.nodes.Server
        properties:
            cloudify_agent:
                user: { get_input: cloudify_agent }
            server:
                image: { get_input: server_image }
                flavor_name: { get_input: server_flavor_name }
        relationships:
            -   type: cloudify.openstack.server_connected_to_floating_ip
                target: ellis_ip
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_internal
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_external
            -   type: cloudify.openstack.server_connected_to_security_group
                target: ellis_vm_security_group

    bono_vm:
        type: cloudify.openstack.nodes.Server
        properties:
            cloudify_agent:
                user: { get_input: cloudify_agent }
            server:
                image: { get_input: server_image }
                flavor_name: { get_input: server_flavor_name }
        relationships:
            -   type: cloudify.openstack.server_connected_to_floating_ip
                target: bono_ip
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_internal
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_external
            -   type: cloudify.openstack.server_connected_to_security_group
                target: bono_vm_security_group
            -   type: cloudify.openstack.server_connected_to_security_group
                target: bono_to_others_security_group
        interfaces:
            cloudify.interfaces.monitoring_agent:
               install:
                  implementation: diamond.diamond_agent.tasks.install
                  inputs:
                     diamond_config:
                        interval: 5
               start: diamond.diamond_agent.tasks.start
               stop: diamond.diamond_agent.tasks.stop
               uninstall: diamond.diamond_agent.tasks.uninstall
            cloudify.interfaces.monitoring:
               start:
                  implementation: diamond.diamond_agent.tasks.add_collectors
                  inputs:
                     collectors_config:
                           CPUCollector: {}

    sprout_vm:
        type: cloudify.openstack.nodes.Server
        properties:
            cloudify_agent:
                user: { get_input: cloudify_agent }
            server:
                image: { get_input: server_image }
                flavor_name: { get_input: server_flavor_name }
        relationships:
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_internal
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_external
            -   type: cloudify.openstack.server_connected_to_security_group
                target: sprout_vm_security_group
            -   type: cloudify.openstack.server_connected_to_security_group
                target: sprout_to_others_security_group

        interfaces:
            cloudify.interfaces.monitoring_agent:
               install:
                  implementation: diamond.diamond_agent.tasks.install
                  inputs:
                     diamond_config:
                        interval: 5
               start: diamond.diamond_agent.tasks.start
               stop: diamond.diamond_agent.tasks.stop
               uninstall: diamond.diamond_agent.tasks.uninstall

            cloudify.interfaces.monitoring:
               start:
                  implementation: diamond.diamond_agent.tasks.add_collectors
                  inputs:
                     collectors_config:
                           CPUCollector: {}

    homestead_vm:
        type: cloudify.openstack.nodes.Server
        properties:
            cloudify_agent:
                user: { get_input: cloudify_agent }
            server:
                image: { get_input: server_image }
                flavor_name: { get_input: server_flavor_name }
        relationships:
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_internal
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_external
            -   type: cloudify.openstack.server_connected_to_security_group
                target: homestead_vm_security_group
            -   type: cloudify.openstack.server_connected_to_security_group
                target: homestead_to_others_security_group

    homer_vm:
        type: cloudify.openstack.nodes.Server
        properties:
            cloudify_agent:
                user: { get_input: cloudify_agent }
            server:
                image: { get_input: server_image }
                flavor_name: { get_input: server_flavor_name }
        relationships:
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_internal
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_external
            -   type: cloudify.openstack.server_connected_to_security_group
                target: homer_vm_security_group
            -   type: cloudify.openstack.server_connected_to_security_group
                target: homer_to_others_security_group

    ralf_vm:
        type: cloudify.openstack.nodes.Server
        properties:
            cloudify_agent:
                user: { get_input: cloudify_agent }
            server:
                image: { get_input: server_image }
                flavor_name: { get_input: server_flavor_name }
        relationships:
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_internal
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_external
            -   type: cloudify.openstack.server_connected_to_security_group
                target: ralf_vm_security_group
            -   type: cloudify.openstack.server_connected_to_security_group
                target: ralf_to_others_security_group

    dns_vm:
        type: cloudify.openstack.nodes.Server
        properties:
            cloudify_agent:
                user: { get_input: cloudify_agent }
            server:
                image: { get_input: server_image }
                flavor_name: { get_input: server_flavor_name }
        relationships:
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_internal
            -   type: cloudify.openstack.server_connected_to_security_group
                target: all_nodes_external
            -   type: cloudify.openstack.server_connected_to_security_group
                target: dns_vm_security_group


########################################################
    bono_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/bono.sh
                 inputs:
                    public_ip: { get_attribute: [ bono_ip, floating_ip_address ] }
                    dns_ip: { get_attribute: [ dns_vm, ip ]  }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: bono_vm
            -  type: dns_client_uses_dns_server
               target: dns_app

    ellis_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/ellis.sh
                 inputs:
                    public_ip: { get_attribute: [ellis_ip, floating_ip_address] }
                    dns_ip: { get_attribute: [dns_vm, ip] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: ellis_vm
            -  type: dns_client_uses_dns_server
               target: dns_app

    ralf_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/ralf.sh
                 inputs:
                    dns_ip: { get_attribute: [ dns_vm, ip ] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: ralf_vm
            -  type: dns_client_uses_dns_server
               target: dns_app

    homestead_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/homestead.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_vm, ip] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: homestead_vm
            -  type: dns_client_uses_dns_server
               target: dns_app

    homer_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/homer.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_vm, ip] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: homer_vm
            -  type: dns_client_uses_dns_server
               target: dns_app

    sprout_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/sprout.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_vm, ip] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: sprout_vm
            -  type: dns_client_uses_dns_server
               target: dns_app

    dns_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/dns.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_vm, ip] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: dns_vm

########################################################

    dns_app_config:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/dns-config.sh
                 inputs:
                    process:
                       command_prefix: /usr/bin/sudo
        relationships:
                -  type: cloudify.relationships.contained_in
                   target: dns_vm
                -  type: cloudify.relationships.connected_to
                   target: dns_app
                -  type: cloudify.relationships.connected_to
                   target: bono_app
                -  type: cloudify.relationships.connected_to
                   target: ellis_app
                -  type: cloudify.relationships.connected_to
                   target: ralf_app
                -  type: cloudify.relationships.connected_to
                   target: sprout_app
                -  type: cloudify.relationships.connected_to
                   target: homer_app
                -  type: cloudify.relationships.connected_to
                   target: homestead_app

########################################################

    snmpd_configuring_node:
        type: SnmpdConfiguringNode
        relationships:
            - type: cloudify.relationships.contained_in
              target: bono_vm

    proxy_node:
        type: SNMPProxy
        relationships:
            - type: cloudify.relationships.contained_in
              target: bono_vm
            - type: cloudify.relationships.depends_on
              target: snmpd_configuring_node
            - type: cloudify.relationships.monitors
              target: bono_vm
              source_interfaces:
                cloudify.interfaces.relationship_lifecycle:
                  preconfigure:
                    inputs:
                      oids:
                        1.3.6.1.4.1.2021.10.1.3.1: total.system
                        1.3.6.1.4.1.2021.10.1.3.2: total.user

outputs:
  web:
    description: Web application endpoint
    value:
      ip_ellis: { get_attribute: [ ellis_ip, floating_ip_address ] }
      ip_bono: { get_attribute: [ bono_ip, floating_ip_address ] }
      signup_code: secret
